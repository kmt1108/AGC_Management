/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.ManagementProcess;
import Model.BillInfo;
import Model.BillProduct;
import Model.Customer;
import Model.DBConnection;
import Model.Employee;
import Model.Order;
import Model.Product;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kieum
 */
public class frmOrderMgr extends javax.swing.JFrame {
    ManagementProcess manager;
    ArrayList<Integer> listCustomer=new ArrayList<>();
    ArrayList<Order> listProduct=new ArrayList<>();
    Employee defaultEmployee;
    
    

    /**
     * Creates new form frmOrderMgr
     */
    public frmOrderMgr(Employee employee) {
        initComponents();
        initConnection();
        this.defaultEmployee=employee;
        btMakeBill.setEnabled(false);
        btDelete.setEnabled(false);
        listCustomer=manager.getOrder();
        initTable();
        tbCustomer.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int idx=tbCustomer.getSelectedRow();
                if (idx!=-1) {
                    initTableProduct(listCustomer.get(idx));
                    btMakeBill.setEnabled(true);
                    btDelete.setEnabled(true);
                }else{
                    tbBillProduct.removeAll();
                    btMakeBill.setEnabled(false);
                    btDelete.setEnabled(false);
                }
            }
        });
        if (listCustomer.size()>0) {
            tbCustomer.setRowSelectionInterval(0, 0);
        }
    }

    private frmOrderMgr() {
        initComponents();//To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbBillProduct = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCustomer = new javax.swing.JTable();
        btMakeBill = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("List Customer");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setText("List product:");

        tbBillProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Quantity", "Set up"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbBillProduct);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 102));
        jLabel1.setText("Order Manager");

        tbCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Customer Name", "Company Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCustomer.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tbCustomer);
        tbCustomer.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        btMakeBill.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btMakeBill.setText("Make Bill");
        btMakeBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMakeBillActionPerformed(evt);
            }
        });

        btDelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btMakeBill)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btDelete))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(23, 23, 23))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel9)
                    .addContainerGap(695, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btMakeBill)
                            .addComponent(btDelete)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(78, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addGap(544, 544, 544)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btMakeBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMakeBillActionPerformed
        // TODO add your handling code here:
        try {
            int billID=Integer.parseInt(JOptionPane.showInputDialog("Input BillID!"));
            BillInfo billInfo=new BillInfo(billID, new Date(),defaultEmployee.getId(),listCustomer.get(tbCustomer.getSelectedRow()));
            if (manager.insertBill(billInfo)) {
                for (Order  order: listProduct) {
                    BillProduct product=new BillProduct(billID, order.getProductID(), order.getQuantity(),order.isIsSetup());
                    manager.insertBillProduct(product);
                }
                manager.deleteOrderForEmployee(billInfo.getCustomerID());
                JOptionPane.showMessageDialog(this, "Make bill successful!");
                new frmOrderMgr().setVisible(true);
                this.dispose();
            }else{
                JOptionPane.showMessageDialog(this, "Make bill Error!","error",JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please input number!");
        }
        
    }//GEN-LAST:event_btMakeBillActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        // TODO add your handling code here:
        if (manager.deleteOrderForEmployee(listCustomer.get(tbCustomer.getSelectedRow()))) {
            JOptionPane.showMessageDialog(this,"Delete completed!");
        }else
            JOptionPane.showMessageDialog(this,"Delete error!"); 
    }//GEN-LAST:event_btDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmOrderMgr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmOrderMgr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmOrderMgr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmOrderMgr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmOrderMgr().setVisible(true);
            }
        });
    }
    private void initTable(){
        tbCustomer.removeAll();
        DefaultTableModel model=new javax.swing.table.DefaultTableModel(new Object [][]{},
    new String [] {"Customer ID", "Customer Name", "Company Name"});
        for (int customerID : listCustomer) {
             Customer customer=manager.getSingleCustomerFromID(customerID);
            model.addRow(new Object[]{customerID,customer.getName(),customer.getCompanyName()});
        }
        tbCustomer.setModel(model);
    }
    private void initTableProduct(int customerID){
        tbBillProduct.removeAll();
        if (listProduct.size()>0) {
            listProduct.clear();
        }
        listProduct=manager.getOrderForCustomer(customerID);
        DefaultTableModel model=new javax.swing.table.DefaultTableModel(new Object [][]{},
    new String [] {"Product ID", "Product Name","Quantity","Is Setup"});
        for (Order order : listProduct) {
            Product product=manager.getSingleProduct(order.getProductID());
            model.addRow(new Object[]{order.getProductID(),product.getName(),order.getQuantity(),order.isIsSetup()});
        }
        tbBillProduct.setModel(model);
    }
    private void initConnection(){
        Connection conn=new DBConnection().getConnection();
        manager=new ManagementProcess(conn);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btMakeBill;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbBillProduct;
    private javax.swing.JTable tbCustomer;
    // End of variables declaration//GEN-END:variables
}
